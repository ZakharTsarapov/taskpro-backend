{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.1",
    "title": "Task Pro API docs",
    "description": "**API documentation for Task Pro application.** ",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "contact": {
      "name": "HotFixTeam",
      "url": "https://github.com/ZakharTsarapov/taskpro-backend"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://taskpro-backend-jo75.onrender.com", "description": "Production" }],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "User registation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Succsessful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User registation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login succsess",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password invalid"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "get currnet user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Succsessful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCurrentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/signout": {
      "post": {
        "tags": ["Users"],
        "summary": "user logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout succsess",
            "content": {}
          },
          "401": {
            "description": "not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/avatar": {
      "post": {
        "tags": ["Users"],
        "summary": "Add avatar for User",
        "parameters": [],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "User's avatar object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/userAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "operation successful",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/userAvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user's information",
        "parameters": [],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "User's information object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUsersRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/themes": {
      "patch": {
        "tags": ["Users"],
        "summary": "change user's theme",
        "parameters": [],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "User's themes object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {}
          }
        }
      }
    },
    "/boards/": {
      "post": {
        "tags": ["Boards"],
        "summary": "Add board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "boards object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Succsessful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/boards/{_id}": {
      "delete": {
        "tags": ["Boards"],
        "summary": "delete board",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "id of the board",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteBoardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/boards/{id}/": {
      "put": {
        "tags": ["Boards"],
        "summary": "update board information",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "description": "Id of the board",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "update board object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "edit boards success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": ["Boards"],
        "summary": "get all boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "descripton": "get all User boards",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllBoards"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/boards/{id}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get one board by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "description": "Id of the board",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardById"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/columns": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add Column",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Columns object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Column validation failed. Path board is required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/columns/{id}": {
      "get": {
        "tags": ["Columns"],
        "summary": "get column by id",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "descripton": "get User column by id",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/columns/{_id}": {
      "delete": {
        "tags": ["Columns"],
        "descripton": "delete User column",
        "summary": "delete column",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "id of the column",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Column successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteColumnResponse"
                }
              }
            }
          }
        }
      }
    },
    "/columns/{id}/": {
      "put": {
        "tags": ["Columns"],
        "summary": "edit column",
        "description": "edit column by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the column",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "edit column object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Column not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "add task",
        "description": "add User task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "task object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addTaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Ivan"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "ivan@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Ivan"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "ivan@gmail.com"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWFmNWIyN2JkZmM5ZjlhM2MxOTA3YyIsImlhdCI6MTY5MzExOTkyOSwiZXhwIjoxNjkzMjAyNzI5fQ.j9WScLzyaieMmP6D5qTVOeGq-BJDbPh9cL4iWtp4G-Q"
          },
          "theme": {
            "type": "string",
            "example": "light"
          },
          "avatarURL": {
            "type": "string",
            "example": "/"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "ivan@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Ihor"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWFmNWIyN2JkZmM5ZjlhM2MxOTA3YyIsImlhdCI6MTY5MzExOTkyOSwiZXhwIjoxNjkzMjAyNzI5fQ.j9WScLzyaieMmP6D5qTVOeGq-BJDbPh9cL4iWtp4G-Q"
          },
          "theme": {
            "type": "string",
            "example": "light"
          },
          "avatarURL": {
            "type": "string",
            "example": "/"
          }
        }
      },
      "getCurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "ivan@gmail.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "User avatar",
            "example": "http://res.cloudinary.com/daqnavarl/image/upload/v1693131808/1693131809722-545479341_avatarka.jpg"
          },
          "theme": {
            "type": "string",
            "description": "User theme",
            "example": "light"
          }
        }
      },
      "userAvatarRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "userAvatarResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "http://res.cloudinary.com/daqnavarl/image/upload/v1693131808/1693131809722-545479341_avatarka.jpg"
          }
        }
      },
      "updateUsersRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Ivan"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "ivan@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwerty123"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "http://res.cloudinary.com/daqnavarl/image/upload/v1693131808/1693131809722-545479341_avatarka.jpg"
          }
        }
      },
      "updateUsersResponse": {
        "type": "object",
        "properties": {
          "User": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Ihor"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "Andrew@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
              },
              "theme": {
                "type": "string",
                "description": "Users's theme",
                "example": "dark"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWFmNWIyN2JkZmM5ZjlhM2MxOTA3YyIsImlhdCI6MTY5MzExOTkyOSwiZXhwIjoxNjkzMjAyNzI5fQ.j9WScLzyaieMmP6D5qTVOeGq-BJDbPh9cL4iWtp4G-Q"
          }
        }
      },
      "userThemeRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "user's themes",
            "enum": ["light", "dark", "violet"],
            "default": "light"
          }
        }
      },
      "userThemeResponse": {
        "type": "object",
        "properties": {
          "User": {
            "type": "object",
            "properties": {
              "theme": {
                "type": "string",
                "description": "User theme",
                "enum": ["light", "dark", "violet"],
                "default": "light"
              }
            }
          }
        }
      },
      "badRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Missing fields"
          }
        }
      },
      "addBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "board title",
            "example": "new board"
          },
          "icon": {
            "type": "string",
            "description": "board icons",
            "enum": [
              "icon-colors",
              "icon-container",
              "icon-hexagon",
              "icon-lightning",
              "icon-loading",
              "icon-project",
              "icon-star",
              "icon-puzzle"
            ],
            "default": "icon-colors"
          },
          "background": {
            "type": "string",
            "description": "board background",
            "enum": [
              "background1",
              "background2",
              "background3",
              "background4",
              "background5",
              "background6",
              "background7",
              "background8",
              "background9",
              "background10",
              "background11",
              "background12",
              "background13",
              "background14",
              "background15"
            ],
            "default": "backgound1"
          }
        }
      },
      "addBoardResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "new board"
          },
          "icon": {
            "type": "string",
            "example": "icon-colors"
          },
          "background": {
            "type": "string",
            "example": "background1"
          },
          "columnOrder": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "230sdf8sdf98s7f9"
                }
              }
            }
          },
          "owner": {
            "type": "string",
            "example": "13231k3j12kh1jhjk"
          }
        }
      },
      "deleteBoardResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "example": {
              "_id": "1134jlk342l4kj2ljc",
              "title": "new board",
              "icon": "icon-colors",
              "background": "background1",
              "columnOrder": [],
              "owner": "54klj463jlk34lkj"
            }
          }
        }
      },
      "updateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "new board"
          },
          "icon": {
            "type": "string",
            "example": "icon-colors"
          },
          "background": {
            "type": "string",
            "example": "background1"
          }
        }
      },
      "updateBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "625l4k5j34lk34j4lk3j45"
          },
          "title": {
            "type": "string",
            "example": "new board"
          },
          "icon": {
            "type": "string",
            "example": "icon-colors"
          },
          "background": {
            "type": "string",
            "example": "background1"
          },
          "columnOrder": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "11841984bj43543k"
                }
              }
            }
          },
          "owner": {
            "type": "string",
            "example": "6425kjh4lkh3434ac"
          }
        }
      },
      "getAllBoards": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string"
            }
          }
        },
        "example": {
          "boards": [
            {
              "_id": "32lk5j59043k4klj",
              "title": "Node board",
              "icon": "icon-colors",
              "background": "background1",
              "columnOrder": [],
              "owner": "146kljh4kj72h425kjhy54k"
            },
            {
              "_id": "45kj64l7kj647kj45lk54jl",
              "title": "React board",
              "icon": "icon-colors",
              "background": "background2",
              "columnOrder": [],
              "owner": "146kljh4kj72h425kjhy54k"
            }
          ]
        }
      },
      "GetBoardById": {
        "type": "object",
        "example": {
          "boards": {
            "_id": "094654jlkjhjk5h3j2k",
            "title": "New Board",
            "icon": "icon-colors",
            "background": "background1",
            "columnOrder": [],
            "owner": "254klj6lkjl6j3lk6j"
          },
          "columns": []
        }
      },
      "addColumnRequest": {
        "type": "object",
        "required": ["board", "title", "index"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New Column"
          },
          "board": {
            "type": "object",
            "example": "1231jk4jkh98231y"
          },
          "index": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "addColumnResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "New Column"
          },
          "board": {
            "type": "string",
            "example": "64cff474d317457be0a3fa94"
          },
          "cardOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "64cfc2efca899b99cc4b3000"
            }
          },
          "_id": {
            "type": "string",
            "example": "64d13c39a01425f5d9c312ab"
          }
        }
      },
      "getColumnsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string"
            }
          }
        },
        "example": {
          "columns": [
            {
              "_id": "32lk5j59043k4klj",
              "title": "Node columns",
              "board": "64ef12ccb500c3a26fcc7b31",
              "index": "1",
              "cardOrder": [],
              "owner": "146kljh4kj72h425kjhy54k"
            }
          ]
        }
      },
      "deleteColumnResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "example": {
              "_id": "1134jlk342l4kj2ljc",
              "title": "column",
              "board": "2jk4h61j41h16v'oj",
              "taskOrder": [],
              "index": "1"
            }
          }
        }
      },
      "updateColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "update"
          }
        }
      },
      "updateColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "625l4k5j34lk34j4lk3j45"
          },
          "title": {
            "type": "string",
            "example": "update"
          },
          "index": {
            "type": "string",
            "example": "2"
          },
          "taskOrder": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "11841984bj43543k"
                }
              }
            }
          },
          "board": {
            "type": "string",
            "example": "6425kjh4lkh3434ac"
          }
        }
      },
      "addTaskRequest": {
        "type": "object",
        "required": ["title", "taskOwner", "description"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New Column"
          },
          "taskOwner": {
            "type": "object",
            "example": "1231jk4jkh98231y"
          },
          "description": {
            "type": "string",
            "example": "task description"
          }
        }
      },
      "addTaskResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "New task"
          },
          "taskOwner": {
            "type": "string",
            "example": "64cff474d317457be0a3fa94"
          },
          "_id": {
            "type": "string",
            "example": "64d13c39a01425f5d9c312ab"
          },
          "description": {
            "type": "string",
            "example": "task description"
          },
          "deadLine": {
            "type": "string",
            "example": "null"
          },
          "priority": {
            "type": "string",
            "example": "without"
          }
        }
      }
    }
  }
}
